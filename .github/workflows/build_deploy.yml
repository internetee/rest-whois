name: build and deploy

on:
  pull_request:
    branches:
    - master

jobs:
  
  build_staging_image:
    runs-on: ubuntu-20.04

    steps:

      - uses: actions/checkout@v2

      - name: Set image tag
        run: |
          SHORT_SHA=$(git describe --always)
          echo "ghcr.io/internetee/rest-whois:RC_$SHORT_SHA" > TAG

      - name: Setting up application
        env:
          ST_A_YML: ${{ secrets.ST_APPLICATION_YML }}
        run: |
          echo $ST_A_YML | base64 -di > ./config/application.yml
          cat ./config/application.yml

      - name: Build image
        run: |
          docker build -t $(cat TAG) -f Dockerfile.generic .

      - name: Push Docker images to gh container registry
        env:
            PASSWORD: ${{ secrets.GHCR }}
        run: |
          echo $PASSWORD | docker login ghcr.io -u eisbot --password-stdin


  temporarily_disable_deploy:
    runs-on: ubuntu-20.04
    needs: build_staging_image
    steps:
      - name: Set variable
        run: echo "is_self-hosted_runner_safe=true" >> $GITHUB_ENV

  deploy_staging:
    if: github.IS_SELF-HOSTED_RUNNER_SAFE == true
    needs:
      - build_staging_image
      - temporarily_disable_deploy
    runs-on: [self-hosted, helm-kubectl]
    env:
      K_CONFIG: ${{ secrets.KUBE_CONFIG }}
    steps:
      - uses: actions/checkout@v2

      - name: Set image tag
        run: |
          SHORT_SHA=$(git describe --always)
          echo "RC_$SHORT_SHA" > TAG

      - name: Upgrade auction in rest-whois-staging
        run: |
          echo $K_CONFIG | base64 -di > kubeconfig
          export KUBECONFIG=./kubeconfig
          helm upgrade --install rwhois-st --set "image.tag=$(cat TAG)" charts --namespace=rwhois-st
