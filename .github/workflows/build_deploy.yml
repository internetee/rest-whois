name: build and deploy staging


on:
  pull_request:
    branches:
    - master

jobs:
  
  build_staging_image:
    runs-on: ubuntu-20.04

    steps:

      - uses: actions/checkout@v2

      - name: Set image tag
        run: |
          SHORT_SHA=$(git describe --always)
          echo "ghcr.io/internetee/rest-whois:RC_$SHORT_SHA" > TAG
          echo "RC_$SHORT_SHA" > SHORT_TAG


      - name: Setting up application
        env:
          ST_A_YML: ${{ secrets.ST_APPLICATION_YML }}
        run: |
          echo $ST_A_YML | base64 -di > ./config/application.yml

      - name: Build image
        run: |
          docker build -t $(cat TAG) -f Dockerfile.generic .

      - name: Push Docker images to gh container registry
        env:
            PASSWORD: ${{ secrets.GHCR }}
        run: |
          echo $PASSWORD | docker login ghcr.io -u eisbot --password-stdin
          docker push $(cat TAG)

      - name: Set deploy config
        env:
          OVPN: ${{ secrets.OVPN }}
          VPN_PWD: ${{ secrets.VPN_PWD }}
          P12: ${{ secrets.P12 }}
          K_CONFIG: ${{ secrets.KUBE_CONFIG }}
          SSH_KEY: ${{ secrets.EISBOT_SSH_KEY }}
        run: |
          echo $VPN_PWD | base64 -di > client.pwd
          chmod 0600 client.pwd
          echo $OVPN | base64 -di >  config.ovpn
          echo $P12 | base64 -di > cert.p12
          mkdir -p ~/.ssh
          echo $SSH_KEY | base64 -di > ~/.ssh/key
          chmod 0600 ~/.ssh/key
          echo $K_CONFIG | base64 -di > kubeconfig
          chmod 0600 kubeconfig

      - name: Install Open VPN
        run: sudo apt-get install openvpn

      - name: Deploy from remote server
        run: |
          sudo openvpn --config config.ovpn --askpass client.pwd --auth-nocache --daemon&
          sleep 15
          ping -c 2 192.168.99.12
          eval `ssh-agent`
          touch ~/.ssh/known_hosts   
          ssh-add ~/.ssh/key
          ssh-keyscan 192.168.99.12 > ~/.ssh/known_hosts
          scp SHORT_TAG runner@192.168.99.12:/home/runner/TAG
          scp kubeconfig runner@192.168.99.12:/home/runner/kubeconfig
          ssh -T runner@192.168.99.12 << 'EOL'
          bash
          export KUBECONFIG=./kubeconfig
          helm repo add eisrepo https://internetee.github.io/helm-charts/
          helm repo update
          helm upgrade --install rwhois-st --set "image.tag=$(cat TAG)" eisrepo/rest-whois --namespace=rwhois-st
          rm TAG
          rm kubeconfig
          EOL

