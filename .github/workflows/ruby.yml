name: Github Testing
on: [push]


jobs:
  test:
    services:
      postgres:
        image: postgres:17
        ports: ["5432:5432"]
        env:
          POSTGRES_PASSWORD: password
          POSTGRES_USERNAME: postgres
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04]
        ruby: ['3.0.3']
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ endsWith(matrix.ruby, 'head') || matrix.ruby == 'debug' }}
    steps:

      - uses: actions/checkout@v5
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby }}
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
      - name: config bundler
        run:  |
          bundle config set without 'development staging production'
          bundle config set deployment '[secure]'
          bundle env
          head -n1 $(which bundle)

      - name: Run Tests & generate coverage
        env:
          PG_DATABASE: postgres
          PG_HOST: localhost
          PG_USER: postgres
          PG_PORT: ${{ job.services.postgres.ports[5432] }}
          RAILS_ENV: test
          COVERAGE: true
          DISABLE_SPRING: 1
        run: |
          cp config/application-example.yml config/application.yml
          cp config/database-travis.yml config/database.yml
          bundle exec rake db:setup
          bundle exec rails test test/*

      # ------------------------------
      # Qlty.sh integration
      # ------------------------------
      - name: Install qlty CLI
        run: |
          curl -LSs https://qlty.sh | bash
          echo "${HOME}/.qlty/bin" >> $GITHUB_PATH

      - name: Upload coverage to Qlty
        env:
          QLTY_COVERAGE_TOKEN: ${{ secrets.QLTY_COVERAGE_TOKEN }}
        run: |
          qlty coverage publish --report-format=simplecov coverage/.resultset.json
